}
return(df.turnover)
}
?beta.temp
#Plot betaSIM over time
#Big change from 0 to 1, very little change from 0-2,3,4
x <- c(36,72,110,152)
plot(x,betaSIM(dataGLp), ylim = c(0,1), col = 'red')
points(x, betaSIM(dataPJp), col = 'blue')
points(x[c(1,2,4)], betaSIM(dataPPp[c(1,2,3,5),]), col = 'green')
#Plot BetaSIM at each elevation
x <- c(36,72,110,152)
plot(c(1750,1750,1750,1750),betaSIM(dataGLp)/x, ylim = c(-0.001, 0.025), xlim = c(1700,2400), col = 'red', pch = c('1','2','3','4'))
points(c(2020,2020,2020,2020), betaSIM(dataPJp)/x, col = 'blue', pch = c('1','2','3','4'))
points(c(2344,2344,2344), betaSIM(dataPPp[c(1,2,3,5),])/x[c(1,2,4)], col = 'green', pch = c('1','2','4') )
x <- c(36,72,110,152)
plot(x,betaSIM(dataGLp), ylim = c(0,1), col = 'red')
points(x, betaSIM(dataPJp), col = 'blue')
points(x[c(1,2,4)], betaSIM(dataPPp[c(1,2,3,5),]), col = 'green')
airTemp3 <- c(22.57,34.5533333333,28.7033333333,24.2933333333,20.5276190476,20.3666666667,32.1433333333,27.0066666667,22.3366666667,19.32,16.7833333333,28.4066666667,24.0233333333,19.29,16.6374285714)
airTemp3
?len
?length
airTemp[1]
airTemp3 <- c(22.57,34.5533333333,28.7033333333,24.2933333333,20.5276190476,20.3666666667,32.1433333333,27.0066666667,22.3366666667,19.32,16.7833333333,28.4066666667,24.0233333333,19.29,16.6374285714)
delta.airTemp[i] <- airTemp3[1]
airTemp3[1]
delta.airTemp <- vector()
delta.airTemp <- vector()
for (i in 2:(length(airTemp)/3){
delta.airTemp[i] <- airTemp[i] - airTemp3[1]
}
for (i in 2:(length(airTemp)/3)){
delta.airTemp[i] <- airTemp[i] - airTemp3[1]
}
for (i in 2:(length(airTemp3)/3)){
delta.airTemp[i] <- airTemp3[i] - airTemp3[1]
}
for (i in 2:(length(airTemp3)/3)){
delta.airTemp[i-1] <- airTemp3[i] - airTemp3[1]
}
delta.airTemp
airTemp3[5]
for (i in 2:(length(airTemp3)/3)){
delta.airTemp[i-1] <- airTemp3[i] - airTemp3[1]
delta.airTemp[i-1+5] <- airTemp3[i+5] - airTemp3[6]
delta.airTemp[i-1+10] <- airTemp3[i+10] - airTemp3[11]
}
delta.airTemp
airTemp3[i+5]
2:(length(airTemp3)/3)
length(airTemp3)/3
for (i in 2:(length(airTemp3)/3)){
delta.airTemp[i-1] <- airTemp3[i] - airTemp3[1]
delta.airTemp[i-1+4] <- airTemp3[i+5] - airTemp3[6]
delta.airTemp[i-1+8] <- airTemp3[i+10] - airTemp3[11]
}
delta.airTemp
length(airTemp3)/3
for (i in 2:(length(airTemp3)/3 -3)){
delta.airTemp[i-1] <- airTemp3[i] - airTemp3[1]
delta.airTemp[i-1+4] <- airTemp3[i+5] - airTemp3[6]
delta.airTemp[i-1+8] <- airTemp3[i+10] - airTemp3[11]
}
delta.airTemp
2:(length(airTemp3)/3 -3
2:(length(airTemp3)/3 -3)
2:(length(airTemp3)/3 -3)
(length(airTemp3)/3 -3)
2:(length(airTemp3)/3)
i-1+8
for (i in 2:(length(airTemp3)/3)){
delta.airTemp[i-1] <- airTemp3[i] - airTemp3[1]
delta.airTemp[i-1+4] <- airTemp3[i+5] - airTemp3[6]
delta.airTemp[i-1+8] <- airTemp3[i+10] - airTemp3[11]
print(i-1+8)
}
delta.airTemp <- vector()
for (i in 2:(length(airTemp3)/3)){
delta.airTemp[i-1] <- airTemp3[i] - airTemp3[1]
delta.airTemp[i-1+4] <- airTemp3[i+5] - airTemp3[6]
delta.airTemp[i-1+8] <- airTemp3[i+10] - airTemp3[11]
print(delta.airTemp[i-1+8])
}
delta.airTemp
delta.airTemp3[1:4]
delta.airTemp3 <- vector()
for (i in 2:(length(airTemp3)/3)){
delta.airTemp3[i-1] <- airTemp3[i] - airTemp3[1]
delta.airTemp3[i-1+4] <- airTemp3[i+5] - airTemp3[6]
delta.airTemp3[i-1+8] <- airTemp3[i+10] - airTemp3[11]
}
x <- c(36,72,110,152)
delta.airTemp3[1:4]
plot(delta.airTemp3[1:4],betaSIM(dataGLp)/x, ylim = c(-0.001, 0.025), xlim = c(1700,2400), col = 'red', pch = c('1','2','3','4'))
points(delta.airTemp3[5:8], betaSIM(dataPJp)/x, col = 'blue', pch = c('1','2','3','4'))
points(delta.airTemp3[9:12], betaSIM(dataPPp[c(1,2,3,5),])/x[c(1,2,4)], col = 'green', pch = c('1','2','4') )
plot(delta.airTemp3[1:4],betaSIM(dataGLp), col = 'red', pch = c('1','2','3','4'))
points(delta.airTemp3[5:8], betaSIM(dataPJp), col = 'blue', pch = c('1','2','3','4'))
points(delta.airTemp3[9:12], betaSIM(dataPPp[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
plot(delta.airTemp3[1:4],betaSIM(dataGLp), col = 'red', pch = c('1','2','3','4'), xlim = c(0,13), ylim = c(0,1))
points(delta.airTemp3[5:8], betaSIM(dataPJp), col = 'blue', pch = c('1','2','3','4'))
points(delta.airTemp3[9:12], betaSIM(dataPPp[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
points(delta.airTemp3[9:12], betaSIM(dataPPp[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
points(delta.airTemp3[c(9,10,12], betaSIM(dataPPp[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
points(delta.airTemp3[c(9,10,12)], betaSIM(dataPPp[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
plot(delta.airTemp3[1:4],betaSIM(dataGLp), col = 'red', pch = c('1','2','3','4'), xlim = c(-3,13), ylim = c(0.5,1))
points(delta.airTemp3[5:8], betaSIM(dataPJp), col = 'blue', pch = c('1','2','3','4'))
points(delta.airTemp3[c(9,10,12)], betaSIM(dataPPp[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
betaSIM <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
df.turnover[i-1] <- beta.temp(t(df[1,]), t(df[i,]), index.family="sor")$beta.sim
}
return(df.turnover)
}
delta.airTemp3 <- vector()
for (i in 2:(length(airTemp3)/3)){
delta.airTemp3[i-1] <- airTemp3[i] - airTemp3[1]
delta.airTemp3[i-1+4] <- airTemp3[i+5] - airTemp3[6]
delta.airTemp3[i-1+8] <- airTemp3[i+10] - airTemp3[11]
}
x <- c(36,72,110,152)
plot(delta.airTemp3[1:4],betaSIM(dataGLp), col = 'red', pch = c('1','2','3','4'), xlim = c(-3,13), ylim = c(0.5,1))
points(delta.airTemp3[5:8], betaSIM(dataPJp), col = 'blue', pch = c('1','2','3','4'))
points(delta.airTemp3[c(9,10,12)], betaSIM(dataPPp[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
####
plot(delta.airTemp3[1:4],betaSIM(dataGLp), col = 'red', pch = c('1','2','3','4'), xlim = c(-3,13), ylim = c(0.3,1))
points(delta.airTemp3[5:8], betaSIM(dataPJp), col = 'blue', pch = c('1','2','3','4'))
points(delta.airTemp3[c(9,10,12)], betaSIM(dataPPp[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
plot(delta.airTemp3[1:4],betaSIM(dataGLp), col = 'red', pch = c('1','2','3','4'), xlim = c(-3,13), ylim = c(0,1))
points(delta.airTemp3[5:8], betaSIM(dataPJp), col = 'blue', pch = c('1','2','3','4'))
points(delta.airTemp3[c(9,10,12)], betaSIM(dataPPp[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
betaSIM_1 <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
df.turnover[i-1] <- beta.temp(t(df[i-1,]), t(df[i,]), index.family="sor")$beta.sim
}
return(df.turnover)
}
#?beta.temp
plot(delta.airTemp3[1:4],betaSIM(dataGL), col = 'red', pch = c('1','2','3','4'), xlim = c(-3,13), ylim = c(0,1))
points(delta.airTemp3[5:8], betaSIM(dataPJ), col = 'blue', pch = c('1','2','3','4'))
points(delta.airTemp3[c(9,10,12)], betaSIM(dataPP[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
plot(delta.airTemp3[1:4],betaSIM(dataGLp), col = 'red', pch = c('1','2','3','4'), xlim = c(-3,13), ylim = c(0,1))
points(delta.airTemp3[5:8], betaSIM(dataPJp), col = 'blue', pch = c('1','2','3','4'))
points(delta.airTemp3[c(9,10,12)], betaSIM(dataPPp[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
points(delta.airTemp3[1:4],betaSIM_1(dataGL), col = 'black', pch = c('1','2','3','4'), xlim = c(-3,13), ylim = c(0,1))
points(delta.airTemp3[1:4],betaSIM_1(dataGLp), col = 'black', pch = c('1','2','3','4'), xlim = c(-3,13), ylim = c(0,1))
?beta.temp
plot(delta.airTemp3[1:4],betaSIM(dataGLp), col = 'red', pch = c('1','2','3','4'), xlim = c(-3,13), ylim = c(0,1))
points(delta.airTemp3[5:8], betaSIM(dataPJp), col = 'blue', pch = c('1','2','3','4'))
points(delta.airTemp3[c(9,10,12)], betaSIM(dataPPp[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
points(delta.airTemp3[1:4],betaSIM_1(dataGLp), col = 'red')
points(delta.airTemp3[5:8], betaSIM_1(dataPJ), col = 'blue')
points(delta.airTemp3[c(9,10,12)], betaSIM_1(dataPPp[c(1,2,3,5),]), col = 'green')
points(delta.airTemp3[5:8], betaSIM_1(dataPJp), col = 'blue')
plot(delta.airTemp3[1:4],betaSIM(dataGLp), col = 'red', pch = c('1','2','3','4'), xlim = c(-3,13), ylim = c(0,1))
points(delta.airTemp3[5:8], betaSIM(dataPJp), col = 'blue', pch = c('1','2','3','4'))
points(delta.airTemp3[c(9,10,12)], betaSIM(dataPPp[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
dataGLp
colnames(data) <- c('PJset','GLCH4','GLH1','GLset','PJCH3','GLCH2','GLCH3','PJCH4','PPCH4','PPCH2','PPH1','PPset','PJH1','PJCH2')
dataGL <- data[,c('GLCH4','GLH1','GLset','GLCH2','GLCH3')]
dataGL <- dataGL[,c(3,2,4,5,1)]
dataGL <- t(dataGL)
dataGLp <- dataGL
dataGLp[dataGLp > 0] <- 1
plot(delta.airTemp3[1:4],betaSIM(dataGLp), col = 'red', pch = c('1','2','3','4'), xlim = c(-3,13), ylim = c(0,1))
points(delta.airTemp3[5:8], betaSIM(dataPJp), col = 'blue', pch = c('1','2','3','4'))
points(delta.airTemp3[c(9,10,12)], betaSIM(dataPPp[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
dataGLp
dataGLp <- dataGL
dataGLp[dataGLp > 0] <- 1
dataGLp.beta <- beta.multi(dataGLp, index.family="sor")
dataGLp.beta
dataPJp <- dataPJ
dataPJp[dataPJp > 0] <- 1
dataPPp <- dataPP
dataPPp[dataPPp > 0] <- 1
dataGL <- data[,c('GLCH4','GLH1','GLset','GLCH2','GLCH3')]
data <- as.matrix(sapply(read.table("otu_table_elevation.txt", sep = "\t",row.names = 1, skip = 1,as.is=T), as.numeric))
colnames(data) <- c('PJset','GLCH4','GLH1','GLset','PJCH3','GLCH2','GLCH3','PJCH4','PPCH4','PPCH2','PPH1','PPset','PJH1','PJCH2')
dataGL <- data[,c('GLCH4','GLH1','GLset','GLCH2','GLCH3')]
dataGL <- dataGL[,c(3,2,4,5,1)]
dataGL <- t(dataGL)
dataPJ <- data[,c('PJset','PJCH3','PJCH4','PJH1','PJCH2')]
dataPJ <- dataPJ[,c(1,4,5,2,3)]
dataPJ <- t(dataPJ)
dataPP <- data[,c('PPCH4','PPCH2','PPH1','PPset')]
dataPP <- dataPP[,c(4,3,2,1)]
dataPP <- t(dataPP)
dataPP <- rbind('PPCH3' = NA, dataPP)
dataPP <- dataPP[c(2,3,4,1,5),]
dataGLp <- dataGL
dataGLp[dataGLp > 0] <- 1
dataGLp.beta <- beta.multi(dataGLp, index.family="sor")
dataGLp.beta
dataPJp <- dataPJ
dataPJp[dataPJp > 0] <- 1
dataPPp <- dataPP
dataPPp[dataPPp > 0] <- 1
betaSIM <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
df.turnover[i-1] <- beta.temp(t(df[1,]), t(df[i,]), index.family="sor")$beta.sim
}
return(df.turnover)
}
plot(delta.airTemp3[1:4],betaSIM(dataGLp), col = 'red', pch = c('1','2','3','4'), xlim = c(-3,13), ylim = c(0,1))
points(delta.airTemp3[5:8], betaSIM(dataPJp), col = 'blue', pch = c('1','2','3','4'))
points(delta.airTemp3[c(9,10,12)], betaSIM(dataPPp[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
points(delta.airTemp3[1:4],betaSIM_1(dataGLp), col = 'red')
points(delta.airTemp3[5:8], betaSIM_1(dataPJp), col = 'blue')
points(delta.airTemp3[c(9,10,12)], betaSIM_1(dataPPp[c(1,2,3,5),]), col = 'green')
plot(delta.airTemp3[1:4],betaSIM(dataGLp), col = 'red', pch = c('1','2','3','4'), xlim = c(-3,13), ylim = c(0,1))
points(delta.airTemp3[5:8], betaSIM(dataPJp), col = 'blue', pch = c('1','2','3','4'))
points(delta.airTemp3[c(9,10,12)], betaSIM(dataPPp[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
dataGLPp[1:2]
dataGLPp[,1:2]
beta.pair[dataGLp[,1:2]]
dataGLp[,1:2]
beta.pair[dataGLp[1:2,]]
dataGLp[1:2,]
beta.pair[dataGLp[1:2,]]
beta.pair(dataGLp[1:2,])
betaSIM(dataGLp)
beta.pair(dataGLp[2:3,])
beta.pair(dataGLp[3:4,])
beta.pair(dataGLp[1:4,])
beta.pair(dataGLp)
bray.part(dataGL)
?bray.part
betaBRAY <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
df.turnover[i-1] <- bray.part(t(df[1,]), t(df[i,]))$bray.gra
}
return(df.turnover)
}
plot(delta.airTemp3[1:4],betaBRAY(dataGL), col = 'red', pch = c('1','2','3','4'), xlim = c(-3,13), ylim = c(0,1))
betaBRAY <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
print(i)
df.turnover[i-1] <- bray.part(t(df[1,]), t(df[i,]))$bray.gra
}
return(df.turnover)
}
plot(delta.airTemp3[1:4],betaBRAY(dataGL), col = 'red', pch = c('1','2','3','4'), xlim = c(-3,13), ylim = c(0,1))
betaBRAY <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
print(i)
df.turnover[i-1] <- bray.part(df[1,], df[i,])$bray.gra
}
return(df.turnover)
}
plot(delta.airTemp3[1:4],betaBRAY(dataGL), col = 'red', pch = c('1','2','3','4'), xlim = c(-3,13), ylim = c(0,1))
betaBRAY <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
print(i)
df.turnover[i-1] <- bray.part(df[c(1,i)])$bray.gra
}
return(df.turnover)
}
plot(delta.airTemp3[1:4],betaBRAY(dataGL), col = 'red', pch = c('1','2','3','4'), xlim = c(-3,13), ylim = c(0,1))
betaBRAY(dataGL)
bray.part(dataGL[c(1,2)])
bray.part(t(dataGL[c(1,2)]))
bray.part(dataGL[c(1,2),])
betaBRAY <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
print(i)
df.turnover[i-1] <- bray.part(df[c(1,i),])$bray.gra
}
return(df.turnover)
}
plot(delta.airTemp3[1:4],betaBRAY(dataGL), col = 'red', pch = c('1','2','3','4'), xlim = c(-3,13), ylim = c(0,1))
points(delta.airTemp3[5:8], betaBRAY(dataPJ), col = 'blue', pch = c('1','2','3','4'))
points(delta.airTemp3[c(9,10,12)], betaBRAY(dataPP[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
delta.time <- c(36,72-36,110,72,152-110)
points(delta.time[c(1,2,4)], betaBRAY(dataPP[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
delta.time <- c(36,72-36,110,72,152-110)
plot(delta.time,betaBRAY(dataGL), col = 'red', pch = c('1','2','3','4'), xlim = c(-3,13), ylim = c(0,1))
points(delta.time, betaBRAY(dataPJ), col = 'blue', pch = c('1','2','3','4'))
points(delta.time[c(1,2,4)], betaBRAY(dataPP[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
plot(delta.time,betaBRAY(dataGL), col = 'red', pch = c('1','2','3','4'), xlim = c(-3,13), ylim = c(0,1))
betaBRAY <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
df.turnover[i-1] <- bray.part(df[c(1,i),])$bray.gra
}
return(df.turnover)
}
betaSIM_1 <- function(df){
delta.time
delta.time <- c(36,72-36,72,152-110)
delta.time
delta.time <- c(36,72-36,110-72,152-110)
delta.time
plot(delta.time,betaBRAY(dataGL), col = 'red', pch = c('1','2','3','4'), xlim = c(-3,13), ylim = c(0,1))
points(delta.time, betaBRAY(dataPJ), col = 'blue', pch = c('1','2','3','4'))
points(delta.time[c(1,2,4)], betaBRAY(dataPP[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
plot(delta.time,betaBRAY(dataGL), col = 'red', pch = c('1','2','3','4'), xlim = c(-3,13), ylim = c(0,1))
plot(delta.time,betaBRAY(dataGL), col = 'red', pch = c('1','2','3','4'), xlim = c(-3,13), ylim = c(0,1))
plot(delta.time,betaBRAY(dataGL), col = 'red', pch = c('1','2','3','4'), xlim = c(0,45), ylim = c(0,1))
plot(delta.time,betaBRAY(dataGL), col = 'red', pch = c('1','2','3','4'), xlim = c(30,45), ylim = c(0,1))
plot(delta.time,betaBRAY(dataGL), col = 'red', pch = c('1','2','3','4'), xlim = c(30,45), ylim = c(0,0.4))
points(delta.time, betaBRAY(dataPJ), col = 'blue', pch = c('1','2','3','4'))
points(delta.time[c(1,2,4)], betaBRAY(dataPP[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
plot(delta.airTemp3[1:4],betaSIM(dataGLp), col = 'red', pch = c('1','2','3','4'), xlim = c(-3,13), ylim = c(0,1))
points(delta.airTemp3[5:8], betaSIM(dataPJp), col = 'blue', pch = c('1','2','3','4'))
points(delta.airTemp3[c(9,10,12)], betaSIM(dataPPp[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
library(data.table)
nitro <- as.matrix(read.csv("/home/bonobo/Documents/Serengeti/16S/nitrogen.csv", header = T, row.names = 1))
row.names(nitro) <- "Nitrogen"
nitro <- as.data.frame(t(nitro))
nitro$Nitrogen
siteVector <- substr(colnames(nitro), 0,3)
substr(row.names(nitro), 0,3)
nitro$group <- substr(row.names(nitro), 0,3)
dt <- data.table(nitro)
stats_N <- dt[,list(mean=mean(Nitrogen),sd=sd(Nitrogen)),by=group]
barplot(stats_N$mean, names.arg = stats_N$group)
boxplot(dt$Nitrogen~dt$group)
?boxplot
boxplot(dt$Nitrogen~dt$group)
extN <- as.matrix(read.csv("/home/bonobo/Documents/Serengeti/16S/16S_env_vars.ods", header = T, row.names = 1))
extN <- as.matrix(read.csv("/home/bonobo/Documents/Serengeti/16S/16S_env_vars.csv", header = T, row.names = 1))
extN
names(extN)
colnames(extN)
boxplot(extN$ExtNappm)
boxplot(as.number(extN$ExtNappm))
extN <- as.data.frame(read.csv("/home/bonobo/Documents/Serengeti/16S/16S_env_vars.csv", header = T, row.names = 1))
boxplot(as.number(extN$ExtNappm))
boxplot(extN$ExtNappm)
boxplot(extN$ExtNappm~extN$Site_Name)
delta.time <- c(36,72-36,110-72,152-110)
plot(delta.time,betaBRAY(dataGL), col = 'red', pch = c('1','2','3','4'), xlim = c(30,45), ylim = c(0,0.4))
points(delta.time, betaBRAY(dataPJ), col = 'blue', pch = c('1','2','3','4'))
points(delta.time[c(1,2,4)], betaBRAY(dataPP[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
delta.time <- c(36,72,110,152)
plot(delta.time,betaBRAY(dataGL), col = 'red', pch = c('1','2','3','4'), xlim = c(30,45), ylim = c(0,0.4))
points(delta.time, betaBRAY(dataPJ), col = 'blue', pch = c('1','2','3','4'))
points(delta.time[c(1,2,4)], betaBRAY(dataPP[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
delta.time <- c(36,72,110,152)
plot(delta.time,betaBRAY(dataGL), col = 'red', pch = c('1','2','3','4'), xlim = c(30,45), ylim = c(0,0.4))
points(delta.time, betaBRAY(dataPJ), col = 'blue', pch = c('1','2','3','4'))
points(delta.time[c(1,2,4)], betaBRAY(dataPP[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
plot(delta.time,betaBRAY(dataGL), col = 'red', pch = c('1','2','3','4'), xlim = c(30,160), ylim = c(0,0.4))
points(delta.time, betaBRAY(dataPJ), col = 'blue', pch = c('1','2','3','4'))
points(delta.time[c(1,2,4)], betaBRAY(dataPP[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
?bray.part
betaSIM <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
df.turnover[i-1] <- beta.temp(t(df[1,]), t(df[i,]), index.family="sor")$beta
}
return(df.turnover)
}
plot(delta.airTemp3[1:4],betaSIM(dataGLp), col = 'red', pch = c('1','2','3','4'), xlim = c(-3,13), ylim = c(0,1))
points(delta.airTemp3[5:8], betaSIM(dataPJp), col = 'blue', pch = c('1','2','3','4'))
points(delta.airTemp3[c(9,10,12)], betaSIM(dataPPp[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
delta.time <- c(36,72,110,152)
plot(delta.time,betaBRAY(dataGL), col = 'red', pch = c('1','2','3','4'), xlim = c(30,160), ylim = c(0,0.4))
points(delta.time, betaBRAY(dataPJ), col = 'blue', pch = c('1','2','3','4'))
points(delta.time[c(1,2,4)], betaBRAY(dataPP[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
betaBRAY <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
df.turnover[i-1] <- bray.part(df[c(1,i),])$bray.gra
}
return(df.turnover)
}
delta.time <- c(36,72,110,152)
plot(delta.time,betaBRAY(dataGL), col = 'red', pch = c('1','2','3','4'), xlim = c(30,160), ylim = c(0,0.4))
points(delta.time, betaBRAY(dataPJ), col = 'blue', pch = c('1','2','3','4'))
points(delta.time[c(1,2,4)], betaBRAY(dataPP[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
betaBRAY(dataGL)
betaBRAY <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
df.turnover[i-1] <- bray.part(df[c(1,i),])$bray.gra
}
return(df.turnover)
}
delta.time <- c(36,72,110,152)
plot(delta.time,betaBRAY(dataGL), col = 'red', pch = c('1','2','3','4'), xlim = c(30,160), ylim = c(0,0.4))
points(delta.time, betaBRAY(dataPJ), col = 'blue', pch = c('1','2','3','4'))
points(delta.time[c(1,2,4)], betaBRAY(dataPP[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
plot(delta.time,betaBRAY(dataGL), col = 'red', pch = c('1','2','3','4'), xlim = c(30,160), ylim = c(0,1))
points(delta.time, betaBRAY(dataPJ), col = 'blue', pch = c('1','2','3','4'))
points(delta.time[c(1,2,4)], betaBRAY(dataPP[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
betaBRAY <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
df.turnover[i-1] <- bray.part(df[c(1,i),])$bray
}
return(df.turnover)
}
}
betaBRAY <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
df.turnover[i-1] <- bray.part(df[c(1,i),])$bray
}
return(df.turnover)
}
bray.part(df[c(1,i),])$bray
bray.part(df[c(1,i),])$bray
i = 2
betaBRAY <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
df.turnover[i-1] <- bray.part(df[c(1,i),])$bray
}
}
return(df.turnover)
}
bray.part(df[c(1,i),])$bray
library(vegan)
library(betapart) #sudo apt-get install libgmp3-dev
data <- as.matrix(sapply(read.table("~/Documents/Monsoon/gitwork/otu_table_elevation.txt", sep = "\t",row.names = 1, skip = 1,as.is=T), as.numeric))
colnames(data) <- c('PJset','GLCH4','GLH1','GLset','PJCH3','GLCH2','GLCH3','PJCH4','PPCH4','PPCH2','PPH1','PPset','PJH1','PJCH2')
#Changing abundance into presence/absence
#Changing abundance into presence/absence
dataGL <- data[,c('GLCH4','GLH1','GLset','GLCH2','GLCH3')]
dataGL <- dataGL[,c(3,2,4,5,1)]
dataGL <- t(dataGL)
dataPJ <- data[,c('PJset','PJCH3','PJCH4','PJH1','PJCH2')]
dataPJ <- dataPJ[,c(1,4,5,2,3)]
dataPJ <- t(dataPJ)
dataPP <- data[,c('PPCH4','PPCH2','PPH1','PPset')]
dataPP <- dataPP[,c(4,3,2,1)]
dataPP <- t(dataPP)
dataPP <- t(dataPP)
dataPP <- rbind('PPCH3' = NA, dataPP)
dataPP <- dataPP[c(2,3,4,1,5),]
dataGLp <- dataGL
dataGLp[dataGLp > 0] <- 1
dataGLp.beta <- beta.multi(dataGLp, index.family="sor")
dataGLp.beta
dataPJp <- dataPJ
dataPJp[dataPJp > 0] <- 1
dataPPp <- dataPP
dataPPp[dataPPp > 0] <- 1
bray.part(dataGL[c(1,2),])
dataPJ <- data[,c('PJset','PJCH3','PJCH4','PJH1','PJCH2')]
dataPJ <- dataPJ[,c(1,4,5,2,3)]
dataPJ <- t(dataPJ)
dataPJ[dataPJ > 0] <- 1
dataPP <- data[,c('PPCH4','PPCH2','PPH1','PPset')]
dataPP <- dataPP[,c(4,3,2,1)]
dataPP <- dataPP[,c(4,3,2,1)]
dataPP <- t(dataPP)
dataPP[dataPP !=  0] <- 1
dataPP <- rbind('PPCH3' = NA, dataPP)
dataPP <- dataPP[c(2,3,4,1,5),]
data <- as.matrix(sapply(read.table("~/Documents/Monsoon/gitwork/otu_table_elevation.txt", sep = "\t",row.names = 1, skip = 1,as.is=T), as.numeric))
colnames(data) <- c('PJset','GLCH4','GLH1','GLset','PJCH3','GLCH2','GLCH3','PJCH4','PPCH4','PPCH2','PPH1','PPset','PJH1','PJCH2')
#Changing abundance into presence/absence
#Changing abundance into presence/absence
dataGL <- data[,c('GLCH4','GLH1','GLset','GLCH2','GLCH3')]
dataGL <- dataGL[,c(3,2,4,5,1)]
dataGL <- t(dataGL)
dataPJ <- data[,c('PJset','PJCH3','PJCH4','PJH1','PJCH2')]
dataPJ <- dataPJ[,c(1,4,5,2,3)]
dataPJ <- t(dataPJ)
dataPP <- data[,c('PPCH4','PPCH2','PPH1','PPset')]
dataPP <- dataPP[,c(4,3,2,1)]
dataPP <- dataPP[,c(4,3,2,1)]
dataPP <- t(dataPP)
dataPP <- rbind('PPCH3' = NA, dataPP)
dataPP <- dataPP[c(2,3,4,1,5),]
dataGLp <- dataGL
data <- as.matrix(sapply(read.table("~/Documents/Monsoon/gitwork/otu_table_elevation.txt", sep = "\t",row.names = 1, skip = 1,as.is=T), as.numeric))
colnames(data) <- c('PJset','GLCH4','GLH1','GLset','PJCH3','GLCH2','GLCH3','PJCH4','PPCH4','PPCH2','PPH1','PPset','PJH1','PJCH2')
#Changing abundance into presence/absence
dataGL <- data[,c('GLCH4','GLH1','GLset','GLCH2','GLCH3')]
dataGL <- dataGL[,c(3,2,4,5,1)]
dataGL <- t(dataGL)
dataPJ <- data[,c('PJset','PJCH3','PJCH4','PJH1','PJCH2')]
dataPJ <- dataPJ[,c(1,4,5,2,3)]
dataPJ <- t(dataPJ)
dataPP <- data[,c('PPCH4','PPCH2','PPH1','PPset')]
dataPP <- dataPP[,c(4,3,2,1)]
dataPP <- t(dataPP)
dataPP <- rbind('PPCH3' = NA, dataPP)
dataPP <- dataPP[c(2,3,4,1,5),]
dataGLp <- dataGL
dataGLp[dataGLp > 0] <- 1
dataGLp.beta <- beta.multi(dataGLp, index.family="sor")
dataGLp.beta
dataPJp <- dataPJ
dataPJp[dataPJp > 0] <- 1
dataPPp <- dataPP
dataPPp[dataPPp > 0] <- 1
bray.part(dataGL[c(1,2),])
betaBRAY <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
df.turnover[i-1] <- bray.part(df[c(1,i),])$bray
}
return(df.turnover)
}
delta.time <- c(36,72,110,152)
plot(delta.time,betaBRAY(dataGL), col = 'red', pch = c('1','2','3','4'), xlim = c(30,160), ylim = c(0,1))
points(delta.time, betaBRAY(dataPJ), col = 'blue', pch = c('1','2','3','4'))
points(delta.time[c(1,2,4)], betaBRAY(dataPP[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
