betaTurnover <- function(dfA){
l <- vector()
for (i in 1:nrow(dfA)){
df <- dfA[i,][dfA[i,] != 0]
alpha[i] <- mean(specnumber(df))
if (i > 1){l[i] <- speciesDelta(ncol(dataPP), alpha[i])}
}
g <- ncol(dfA) - alpha[1]
print(g)
bt <- (l+rep(g, length(l)))/alpha
print(l)
print(alpha)
print(bt)
return(bt)
}
btGL <- betaTurnover(dataGL)
plot(c(1750,1750,1750,1750,1750), log(btGL/c(0,36,72,110,152)), pch = c('1','2','3','4'), col = 'red', ylim = c(-5,0))
btPJ <- betaTurnover(dataPJ)
points(c(2020,2020,2020,2020,2020), log(btPJ/c(0,36,72,110,152)), pch = c('1','2','3','4'), col = 'blue')
btPP <- betaTurnover(dataPP)
points(c(2344,2344,2344,2344,2344), log(btPP/c(0,36,72,110,152)), pch = c('1','2','4'), col = 'green')
library(scatterplot3d)
scatterplot3d(btGL, c(1750,1750,1750,1750,1750), c(0,36,72,110,152))
scatterplot3d(c(1750,1750,1750,1750,1750),btGL, c(0,36,72,110,152))
scatterplot3d(c(0,36,72,110,152),c(1750,1750,1750,1750,1750),btGL)
?scatterplot3d
scatterplot3d(c(0,36,72,110,152),c(1750,1750,1750,1750,1750),btGL)
scatterplot3d(c(0,36,72,110,152),c(1750,1750,1750,1750,1750),btGL, col = 'red')
?scatterplot3d
scatterplot3d(c(0,36,72,110,152),c(1750,1750,1750,1750,1750),btGL, color = 'red')
points(c(0,36,72,110,152),(2020,2020,2020,2020,2020),btPJ, color = 'blue')
?scatterplot3d
scatterplot3d(c(0,36,72,110,152),c(1750,1750,1750,1750,1750),btGL, color = 'red')
points3d(c(0,36,72,110,152),(2020,2020,2020,2020,2020),btPJ, color = 'blue')
points3d(c(0,36,72,110,152),c(2020,2020,2020,2020,2020),btPJ, color = 'blue')
?scatterplot3d
?points3d
scatterplot3d.points3d(c(0,36,72,110,152),c(2020,2020,2020,2020,2020),btPJ, color = 'blue')
plot <- scatterplot3d(c(0,36,72,110,152),c(1750,1750,1750,1750,1750),btGL, color = 'red')
points3d(c(0,36,72,110,152),c(2020,2020,2020,2020,2020),btPJ, color = 'blue')
plot$points3d(c(0,36,72,110,152),c(2020,2020,2020,2020,2020),btPJ, color = 'blue')
?scatterplot3d
plot$points3d(c(0,36,72,110,152),c(2020,2020,2020,2020,2020),btPJ, col = 'blue')
plot <- scatterplot3d(c(0,36,72,110,152),c(1750,1750,1750,1750,1750),btGL, color = 'red')
plot <- scatterplot3d(c(0,36,72,110,152),c(1750,1750,1750,1750,1750),btGL, col = 'red')
?scatterplot3d
btGL <- betaTurnover(dataGL)
plot(c(1750,1750,1750,1750,1750), log(btGL/c(0,36,72,110,152)), pch = c('1','2','3','4'), col = 'red', ylim = c(-5,0))
btPJ <- betaTurnover(dataPJ)
points(c(2020,2020,2020,2020,2020), log(btPJ/c(0,36,72,110,152)), pch = c('1','2','3','4'), col = 'blue')
btPP <- betaTurnover(dataPP)
points(c(2344,2344,2344,2344,2344), log(btPP/c(0,36,72,110,152)), pch = c('1','2','4'), col = 'green')
betaTurnover <- function(dfA){
l <- vector()
for (i in 1:nrow(dfA)){
df <- dfA[i,][dfA[i,] != 0]
alpha[i] <- mean(specnumber(df))
if (i > 1){l[i] <- speciesDelta(ncol(dataPP), alpha[i])}
}
g <- ncol(dfA) - alpha[1]
print(g)
bt <- (l+rep(g, length(l)))/alpha
print(l)
print(alpha)
print(bt)
return(bt/c(0,36,72,110,152))
}
btGL <- betaTurnover(dataGL)
plot(c(1750,1750,1750,1750,1750), btGL, pch = c('1','2','3','4'), col = 'red', ylim = c(-5,0))
plot(c(1750,1750,1750,1750,1750), btGL, pch = c('1','2','3','4'), col = 'red', ylim = c(-5,5))
plot(c(1750,1750,1750,1750,1750), btGL, pch = c('1','2','3','4'), col = 'red', ylim = c(-1,1))
plot(c(1750,1750,1750,1750,1750), btGL, pch = c('1','2','3','4'), col = 'red', ylim = c(-.1,.1))
plot(c(1750,1750,1750,1750,1750), btGL, pch = c('1','2','3','4'), col = 'red', ylim = c(-.3,.3))
plot(c(1750,1750,1750,1750,1750), btGL, pch = c('1','2','3','4'), col = 'red', ylim = c(0,.3))
plot(c(1750,1750,1750,1750,1750), btGL, pch = c('1','2','3','4'), col = 'red', ylim = c(0,1))
btPJ <- betaTurnover(dataPJ)
points(c(2020,2020,2020,2020,2020), log(btPJ/c(0,36,72,110,152)), pch = c('1','2','3','4'), col = 'blue')
points(c(2020,2020,2020,2020,2020), btPJ, pch = c('1','2','3','4'), col = 'blue')
btPP <- betaTurnover(dataPP)
points(c(2344,2344,2344,2344,2344), btPP, pch = c('1','2','4'), col = 'green')
?betaSIM
?beta.SIM
beat.multi
?beat.multi
library(beatpart)
library(betapart)
?beta.SIM
?beat.multi
?beta.multi
dataGL.beta <- beta.multi(dataGL, index.family="sim")
dataGL.beta <- beta.multi(dataGL, index.family="sor")
dataGL.beta <- beta.multi(dataGL, index.family="jac")
datGLp <- dataGL
datGLp[dataGLp > 0] <- 1
dataGLp <- dataGL
dataGLp[dataGLp > 0] <- 1
dataGLp.beta <- beta.multi(dataGLp, index.family="jac")
dataGLp.beta$SIM
dataGLp.beta
dataGLp.beta <- beta.multi(dataGLp, index.family="sor")
dataGLp.beta
dataGLp.temp.beta <- (dataGLp[1,], dataGLp[2,], index.family="sor")
dataGLp[1,]
dataGLp.temp.beta <- (dataGLp[1,], dataGLp[2,], index.family="sor")
dataGLp.temp.beta <- beta.temp(dataGLp[1,], dataGLp[2,], index.family="sor")
dataGLp.temp.beta
dataGLp.temp.beta
head(dataGLp.temp.beta)
dataGLp.temp.beta <- beta.temp(t(dataGLp[1,]), t(dataGLp[2,]), index.family="sor")
head(dataGLp.temp.beta)
for (i in 2:nrows(dataGLp)){
beta.temp(t(dataGLp[1,]), t(dataGLp[i,]), index.family="sor")
}
for (i in 2:nrow(dataGLp)){
beta.temp(t(dataGLp[1,]), t(dataGLp[i,]), index.family="sor")
}
print(beta.temp(t(dataGLp[1,]), t(dataGLp[i,]), index.family="sor"))
for (i in 2:nrow(dataGLp)){
print(beta.temp(t(dataGLp[1,]), t(dataGLp[i,]), index.family="sor"))
}
dataGLp.turnover <- vector()
dataGLp.turnover <- vector()
for (i in 2:nrow(dataGLp)){
dataGLp.turnover[i-1] <- print(beta.temp(t(dataGLp[1,]), t(dataGLp[i,]), index.family="sor"))
}
dataGLp.turnover <- vector()
for (i in 2:nrow(dataGLp)){
dataGLp.turnover[i-1] <- beta.temp(t(dataGLp[1,]), t(dataGLp[i,]), index.family="sor")$beta.sim
}
plot(dataGLp.turnover, c(36,72,110,152))
plot(c(36,72,110,152),dataGLp.turnover)
plot(c(36,72,110,152),dataGLp.turnover, xlim c(0,1))
plot(c(36,72,110,152),dataGLp.turnover, xlim = c(0,1))
plot(c(36,72,110,152),dataGLp.turnover, xlim = c(1,0))
plot(c(36,72,110,152),dataGLp.turnover, ylim = c(0,1))
betaSIM <- function(df){
df.turnover
for (i in 2:nrow(df)){
df.turnover[i-1] <- beta.temp(t(df[1,]), t(df[i,]), index.family="sor")$beta.sim
}
return(df.turnover)
}
plot(c(36,72,110,152),betaSIM(dataGLp), ylim = c(0,1))
betaSIM <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
df.turnover[i-1] <- beta.temp(t(df[1,]), t(df[i,]), index.family="sor")$beta.sim
}
return(df.turnover)
}
plot(c(36,72,110,152),betaSIM(dataGLp), ylim = c(0,1))
plot(c(36,72,110,152),betaSIM(dataGLp), ylim = c(0,1), col = 'red')
x <- c(36,72,110,152)
plot(x,betaSIM(dataGLp), ylim = c(0,1), col = 'red')
dataPJp <- dataPJ
dataPJp[dataPJp > 0] <- 1
points(x, betaSIM(dataPJp), col = 'blue')
dataPPp <- dataPP
dataPPp[dataPPp > 0] <- 1
points(x, betaSIM(dataPPp), col = 'green')
points(x[1,2,4], betaSIM(dataPPp[1,2,3,5]), col = 'green')
View(dataPPp)
x[1,2,4]
x[c(1,2,4)]
points(x[c(1,2,4)], betaSIM(dataPPp[c(1,2,3,5)]), col = 'green')
dataPPp[c(1,2,3,5)]
points(x[c(1,2,4)], betaSIM(dataPPp[c(1,2,3,5)]), col = 'green')
View(dataPPp)
points(x[c(1,2,4)], betaSIM(dataPPp[c(1,2,3,5)],), col = 'green')
points(x[c(1,2,4)], betaSIM(dataPPp[c(1,2,3,5),]), col = 'green')
?prop.test
betaSIM(dataGLp)
G <- betaSIM(dataGLp)
PJ <- betaSIM(dataPJp)
PP <- betaSIM(dataPPp)
PP <- betaSIM(dataPPp[c(1,2,3,5),])
View(dataPPp)
G <- as.vector(betaSIM(dataGLp))
G <- as.vector(betaSIM(dataGLp))
G <- as.data.frame(betaSIM(dataGLp))
View(G)
PJ <- as.data.frame(betaSIM(dataPJp))
PP <- as.data.frame(betaSIM(dataPPp[c(1,2,3,5),]))
View(PJ)
View(PP)
plotc(c(1, 2, 3, 4), c(0.5029851,  0.4832,     0.6301616,  0.4622951))
plot(c(1, 2, 3, 4), c(0.5029851,  0.4832,     0.6301616,  0.4622951))
summary(lm(c(1, 2, 3, 4)~ c(0.5029851,  0.4832,     0.6301616,  0.4622951)))
library(betapart)
data(bbsData)
View(bbs1980)
View(bbs1980)
View(bbs1980)
data(ceram.s)
View(ceram.s)
ceram.beta<-beta.multi(ceram.s, index.family="sor")
ceram.beta
bbs.t <- beta.temp(bbs1980, bbs2000, index.family="sor")
bbs.t
View(data)
View(dataGLp)
GL[1,]
dataGLp[1,]
gl.t < beta.temp(dataGLp[1,], dataGLp[2,], index.family="sor")
gl.t <- beta.temp(dataGLp[1,], dataGLp[2,], index.family="sor")
View(gl.t)
gl.t <- beta.temp(t(dataGLp[1,]), t(dataGLp[2,]), index.family="sor")
gl.t
gl.t <- beta.temp(t(c(dataGLp[1,],dataPJp[1,],dataPPp[1,])), t(c(dataGLp[2,],dataPJp[2,],dataPPp[2,])), index.family="sor")
gl.t
c(dataGLp[1,],dataPJp[1,],dataPPp[1,])
setwd("~/Documents/Monsoon/gitwork")
library(vegan)
data <- as.matrix(sapply(read.table("otu_table_elevation.txt", sep = "\t",row.names = 1, skip = 1,as.is=T), as.numeric))
colnames(data) <- c('PJset','GLCH4','GLH1','GLset','PJCH3','GLCH2','GLCH3','PJCH4','PPCH4','PPCH2','PPH1','PPset','PJH1','PJCH2')
dataGL <- data[,c('GLCH4','GLH1','GLset','GLCH2','GLCH3')]
dataGL <- dataGL[,c(3,2,4,5,1)]
# dataGL <- t(dataGL[rowSums(dataGL) != 0,])
dataPJ <- data[,c('PJset','PJCH3','PJCH4','PJH1','PJCH2')]
dataPJ <- dataPJ[,c(1,4,5,2,3)]
# dataPJ <- t(dataPJ[rowSums(dataPJ) != 0,])
dataPP <- data[,c('PPCH4','PPCH2','PPH1','PPset')]
dataPP <- dataPP[,c(4,3,2,1)]
# dataPP <- t(dataPP[rowSums(dataPP) != 0,])
dataPP <- rbind('PPCH3' = NA, dataPP)
dataPP <- dataPP[c(2,3,4,1,5),]
dataGLp <- dataGL
dataGLp[dataGLp > 0] <- 1
dataGLp.beta <- beta.multi(dataGLp, index.family="sor")
dataGLp.beta
dataPJp <- dataPJ
dataPJp[dataPJp > 0] <- 1
dataPPp <- dataPP
dataPPp[dataPPp > 0] <- 1
betaSIM <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
dataGLp <- dataGL
dataGLp[dataGLp > 0] <- 1
dataGLp <- dataGL
dataGLp[dataGLp > 0] <- 1
dataPJp <- dataPJ
dataPJp[dataPJp > 0] <- 1
dataPPp <- dataPP
dataPPp[dataPPp > 0] <- 1
#Creating function to loop over all possible comparisons
betaSIM <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
df.turnover[i-1] <- beta.temp(t(df[1,]), t(df[i,]), index.family="jac")$beta.jac
}
return(df.turnover)
}
x <- c(36,72,110,152)
plot(x,betaSIM(dataGLp), ylim = c(0,1), col = 'red')
points(x, betaSIM(dataPJp), col = 'blue')
points(x[c(1,2,4)], betaSIM(dataPPp[c(1,2,3,5),]), col = 'green')
betaSIM(dataGLp)
dataGLp <- t(dataGL)
dataGLp[dataGLp > 0] <- 1
dataPJp <- t(dataPJ)
dataPJp[dataPJp > 0] <- 1
dataPPp <- t(dataPP)
dataPPp[dataPPp > 0] <- 1
betaSIM(dataGLp)
plot(x,betaSIM(dataGLp), ylim = c(0,1), col = 'red')
points(x, betaSIM(dataPJp), col = 'blue')
points(x[c(1,2,4)], betaSIM(dataPPp[c(1,2,3,5),]), col = 'green')
points(x[c(1,2,4)], betaSIM(dataPPp[c(1,2,3,5)]), col = 'green')
points(x[c(1,2,4)], betaSIM(dataPPp[c(1,2,3,5),]), col = 'green')
points(x[c(1,2,4)], betaSIM(dataPPp[c(1,2,3,5),]), col = 'green')
dataPPp[c(1,2,3,5),]
dataPPp[c(1,2,3,5),]
dataPPp
dataPPp <- t(dataPP)
dataPPp[dataPPp > 0] <- 1
dataPPp[c(1,2,3,5),]
dataPPp
dataPJp
dataPP <- data[,c('PPCH4','PPCH2','PPH1','PPset')]
dataPP <- dataPP[,c(4,3,2,1)]
dataPP <- rbind('PPCH3' = NA, dataPP)
dataPP <- dataPP[c(2,3,4,1,5),]
dataPPp <- t(dataPP)
View(dataPPp)
dataPP <- data[,c('PPCH4','PPCH2','PPH1','PPset')]
dataPP <- dataPP[,c(4,3,2,1)]
dataPP <- data[,c('PPCH4','PPCH2','PPH1','PPset')]
dataPP <- dataPP[,c(4,3,2,1)]
dataPPp <- t(dataPP)
dataPPp[dataPPp !=  0] <- 1
View(dataPPp)
dataPP <- cbind('PPCH3' = NA, dataPP)
View(dataPPp)
dataGL <- data[,c('GLCH4','GLH1','GLset','GLCH2','GLCH3')]
dataGL <- dataGL[,c(3,2,4,5,1)]
dataGL <- t(dataGL)
dataGL[dataGLp > 0] <- 1
dataPJ <- data[,c('PJset','PJCH3','PJCH4','PJH1','PJCH2')]
dataPJ <- dataPJ[,c(1,4,5,2,3)]
dataPJ <- t(dataPJ)
dataPJ[dataPJp > 0] <- 1
dataPP <- data[,c('PPCH4','PPCH2','PPH1','PPset')]
dataPP <- dataPP[,c(4,3,2,1)]
dataPP <- t(dataPP)
dataPPp[dataPPp !=  0] <- 1
dataPP <- cbind('PPCH3' = NA, dataPP)
View(dataPP)
dataPP <- data[,c('PPCH4','PPCH2','PPH1','PPset')]
dataPP <- dataPP[,c(4,3,2,1)]
dataPP <- t(dataPP)
dataPPp[dataPPp !=  0] <- 1
dataPP <- rbind('PPCH3' = NA, dataPP)
View(dataPP)
dataPP <- dataPP[,c(2,3,4,1,5)]
View(dataPP)
dataPP <- data[,c('PPCH4','PPCH2','PPH1','PPset')]
dataPP <- dataPP[,c(4,3,2,1)]
dataPP <- t(dataPP)
dataPP[dataPPp !=  0] <- 1
dataPP <- rbind('PPCH3' = NA, dataPP)
dataPP <- dataPP[,c(2,3,4,1,5)]
View(dataPP)
dataPP <- data[,c('PPCH4','PPCH2','PPH1','PPset')]
dataPP <- dataPP[,c(4,3,2,1)]
dataPP <- t(dataPP)
dataPP[dataPPp !=  0] <- 1
dataPP <- rbind('PPCH3' = NA, dataPP)
dataPP <- dataPP[c(2,3,4,1,5),]
View(dataPP)
betaSIM <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
df.turnover[i-1] <- beta.temp(t(df[1,]), t(df[i,]), index.family="jac")$beta.jac
}
return(df.turnover)
}
betaSIM(dataGL)
plot(x,betaSIM(dataGL), ylim = c(0,1), col = 'red')
points(x, betaSIM(dataPJ), col = 'blue')
points(x[c(1,2,4)], betaSIM(dataPP[c(1,2,3,5),]), col = 'green')
x <- c(36,72,110,152)
plot(c(1750,1750,1750,1750),betaSIM(dataGL)/x, ylim = c(-0.001, 0.025), xlim = c(1700,2400), col = 'red', pch = c('1','2','3','4'))
points(c(2020,2020,2020,2020), betaSIM(dataPJ)/x, col = 'blue', pch = c('1','2','3','4'))
points(c(2344,2344,2344), betaSIM(dataPP[c(1,2,3,5),])/x[c(1,2,4)], col = 'green', pch = c('1','2','4') )
betaSIM <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
df.turnover[i-1] <- beta.temp(t(df[i-1,]), t(df[i,]), index.family="jac")$beta.sim
}
return(df.turnover)
}
x <- c(36,72,110,152)
plot(x,betaSIM(dataGL), ylim = c(0,1), col = 'red')
points(x, betaSIM(dataPJ), col = 'blue')
points(x[c(1,2,4)], betaSIM(dataPP[c(1,2,3,5),]), col = 'green')
betaSIM <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
print(beta.temp(t(df[i-1,]), t(df[i,]), index.family="jac")$beta.sim)
df.turnover[i-1] <- beta.temp(t(df[i-1,]), t(df[i,]), index.family="jac")$beta.sim
}
return(df.turnover)
}
x <- c(36,72,110,152)
plot(x,betaSIM(dataGL), ylim = c(0,1), col = 'red')
betaSIM <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
print(beta.temp((df[i-1,]), (df[i,]), index.family="jac")$beta.sim)
df.turnover[i-1] <- beta.temp(t(df[i-1,]), t(df[i,]), index.family="jac")$beta.sim
}
return(df.turnover)
}
x <- c(36,72,110,152)
plot(x,betaSIM(dataGL), ylim = c(0,1), col = 'red')
betaSIM <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
print(df[i-1,])
print(beta.temp(t(df[i-1,]), t(df[i,]), index.family="jac")$beta.sim)
df.turnover[i-1] <- beta.temp(t(df[i-1,]), t(df[i,]), index.family="jac")$beta.sim
}
return(df.turnover)
}
x <- c(36,72,110,152)
plot(x,betaSIM(dataGL), ylim = c(0,1), col = 'red')
betaSIM <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
print(i)
print(beta.temp(t(df[i-1,]), t(df[i,]), index.family="jac")$beta.sim)
df.turnover[i-1] <- beta.temp(t(df[i-1,]), t(df[i,]), index.family="jac")$beta.sim
}
return(df.turnover)
}
x <- c(36,72,110,152)
plot(x,betaSIM(dataGL), ylim = c(0,1), col = 'red')
?beta.temp
betaSIM <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
print(i)
print(beta.temp(t(df[i-1,]), t(df[i,]), index.family="sor")$beta.sim)
df.turnover[i-1] <- beta.temp(t(df[i-1,]), t(df[i,]), index.family="jac")$beta.sim
}
return(df.turnover)
}
x <- c(36,72,110,152)
plot(x,betaSIM(dataGL), ylim = c(0,1), col = 'red')
betaSIM <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
df.turnover[i-1] <- beta.temp(t(df[i-1,]), t(df[i,]), index.family="sim")$beta.sim
}
return(df.turnover)
}
x <- c(36,72,110,152)
plot(x,betaSIM(dataGL), ylim = c(0,1), col = 'red')
betaSIM <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
df.turnover[i-1] <- beta.temp(t(df[i-1,]), t(df[i,]), index.family="sor")$beta.sim
}
return(df.turnover)
}
x <- c(36,72,110,152)
plot(x,betaSIM(dataGL), ylim = c(0,1), col = 'red')
points(x, betaSIM(dataPJ), col = 'blue')
points(x[c(1,2,4)], betaSIM(dataPP[c(1,2,3,5),]), col = 'green')
plot(c(1750,1750,1750,1750),betaSIM(dataGL)/x, ylim = c(-0.001, 0.025), xlim = c(1700,2400), col = 'red', pch = c('1','2','3','4'))
points(c(2020,2020,2020,2020), betaSIM(dataPJ)/x, col = 'blue', pch = c('1','2','3','4'))
points(c(2344,2344,2344), betaSIM(dataPP[c(1,2,3,5),])/x[c(1,2,4)], col = 'green', pch = c('1','2','4') )
x <- c(36,72-36,110-72,152-110)
plot(c(1750,1750,1750,1750),betaSIM(dataGL)/x, ylim = c(-0.001, 0.025), xlim = c(1700,2400), col = 'red', pch = c('1','2','3','4'))
points(c(2020,2020,2020,2020), betaSIM(dataPJ)/x, col = 'blue', pch = c('1','2','3','4'))
points(c(2344,2344,2344), betaSIM(dataPP[c(1,2,3,5),])/x[c(1,2,4)], col = 'green', pch = c('1','2','4') )
betaSIM <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
df.turnover[i-1] <- beta.temp(t(df[1,]), t(df[i,]), index.family="sor")$beta.sim
}
return(df.turnover)
}
plot(c(1750,1750,1750,1750),betaSIM(dataGL)/x, ylim = c(-0.001, 0.025), xlim = c(1700,2400), col = 'red', pch = c('1','2','3','4'))
points(c(2020,2020,2020,2020), betaSIM(dataPJ)/x, col = 'blue', pch = c('1','2','3','4'))
points(c(2344,2344,2344), betaSIM(dataPP[c(1,2,3,5),])/x[c(1,2,4)], col = 'green', pch = c('1','2','4') )
airTemp3 <- c(22.57,34.5533333333,28.7033333333,24.2933333333,20.5276190476,20.3666666667,32.1433333333,27.0066666667,22.3366666667,19.32,16.7833333333,28.4066666667,24.0233333333,19.29,16.6374285714)
x <- c(36,72,110,152)
plot(airTemp3[c(,2,3,4,5)],betaSIM(dataGLp)/x, ylim = c(-0.001, 0.025), xlim = c(1700,2400), col = 'red', pch = c('1','2','3','4'))
plot(airTemp3[c(,2,3,4,5),],betaSIM(dataGLp)/x, ylim = c(-0.001, 0.025), xlim = c(1700,2400), col = 'red', pch = c('1','2','3','4'))
plot(airTemp3[c(2,3,4,5),],betaSIM(dataGLp)/x, ylim = c(-0.001, 0.025), xlim = c(1700,2400), col = 'red', pch = c('1','2','3','4'))
plot(airTemp3[c(2,3,4,5)],betaSIM(dataGLp)/x, ylim = c(-0.001, 0.025), xlim = c(1700,2400), col = 'red', pch = c('1','2','3','4'))
plot(airTemp3[c(2,3,4,5)],betaSIM(dataGLp)/x, ylim = c(-0.001, 0.025), xlim = c(17,30), col = 'red', pch = c('1','2','3','4'))
plot(airTemp3[c(2,3,4,5)],betaSIM(dataGLp)/x, xlim = c(17,30), col = 'red', pch = c('1','2','3','4'))
plot(airTemp3[c(2,3,4,5)],betaSIM(dataGLp)/x, xlim = c(17,35), col = 'red', pch = c('1','2','3','4'))
points(airTemp3[c(7,8,9,10)], betaSIM(dataPJp)/x, col = 'blue', pch = c('1','2','3','4'))
points(airTemp3[c(12,13,14,15)], betaSIM(dataPPp[c(1,2,3,5),])/x[c(1,2,4)], col = 'green', pch = c('1','2','4') )
points(airTemp3[c(12,13,15)], betaSIM(dataPPp[c(1,2,3,5),])/x[c(1,2,4)], col = 'green', pch = c('1','2','4') )
dataPPp[c(1,2,3,5),]
points(x[c(1,2,4)], betaSIM(dataPP[c(1,2,3,5),]), col = 'green')
View(dataPP)
points(airTemp3[c(12,13,14,15)], betaSIM(dataPPp[c(2,3,5),])/x[c(1,2,4)], col = 'green', pch = c('1','2','4') )
points(airTemp3[c(12,13,14,15)], betaSIM(dataPPp[c(1,2,3,5),])/x[c(1,2,4)], col = 'green', pch = c('1','2','4') )
airTemp3[c(12,13,14,15)
airTemp3[c(12,13,14,15)]
airTemp3[c(12,13,14,15)]
plot(c(1750,1750,1750,1750),betaSIM(dataGL)/x, ylim = c(-0.001, 0.025), xlim = c(1700,2400), col = 'red', pch = c('1','2','3','4'))
points(c(2020,2020,2020,2020), betaSIM(dataPJ)/x, col = 'blue', pch = c('1','2','3','4'))
points(c(2344,2344,2344), betaSIM(dataPP[c(1,2,3,5),])/x[c(1,2,4)], col = 'green', pch = c('1','2','4') )
points(airTemp3[c(13,14,15)], betaSIM(dataPPp[c(1,2,3,5),])/x[c(1,2,4)], col = 'green', pch = c('1','2','4') )
plot(airTemp3[c(2,3,4,5)],betaSIM(dataGLp)/x, xlim = c(17,35), col = 'red', pch = c('1','2','3','4'))
points(airTemp3[c(7,8,9,10)], betaSIM(dataPJp)/x, col = 'blue', pch = c('1','2','3','4'))
points(airTemp3[c(13,14,15)], betaSIM(dataPPp[c(1,2,3,5),])/x[c(1,2,4)], col = 'green', pch = c('1','2','4') )
betaSIM <- function(df){
df.turnover <- vector()
for (i in 2:nrow(df)){
df.turnover[i-1] <- beta.temp(t(df[1,]), t(df[i,]), index.family="sor")$beta.sim
}
return(df.turnover)
}
plot(airTemp3[c(2,3,4,5)],betaSIM(dataGLp)/x, xlim = c(17,35), col = 'red', pch = c('1','2','3','4'))
points(airTemp3[c(7,8,9,10)], betaSIM(dataPJp)/x, col = 'blue', pch = c('1','2','3','4'))
points(airTemp3[c(13,14,15)], betaSIM(dataPPp[c(1,2,3,5),])/x[c(1,2,4)], col = 'green', pch = c('1','2','4') )
dataPPp[c(1,2,3,5),]
View(dataPP)
dataPPp[c(1,2,3,5)]
dataPPp[,c(1,2,3,5)]
head(dataPPp)
dataPPp[c(1,2,3,5),]
plot(airTemp3[c(2,3,4,5)],betaSIM(dataGL)/x, xlim = c(17,35), col = 'red', pch = c('1','2','3','4'))
points(airTemp3[c(7,8,9,10)], betaSIM(dataPJ)/x, col = 'blue', pch = c('1','2','3','4'))
points(airTemp3[c(13,14,15)], betaSIM(dataPP[c(1,2,3,5),])/x[c(1,2,4)], col = 'green', pch = c('1','2','4') )
points(airTemp3[c(12,13,15)], betaSIM(dataPP[c(1,2,3,5),])/x[c(1,2,4)], col = 'green', pch = c('1','2','4') )
plot(airTemp3[c(2,3,4,5)],betaSIM(dataGL)/x, xlim = c(17,35), col = 'red', pch = c('1','2','3','4'))
points(airTemp3[c(7,8,9,10)], betaSIM(dataPJ)/x, col = 'blue', pch = c('1','2','3','4'))
points(airTemp3[c(12,13,15)], betaSIM(dataPP[c(1,2,3,5),])/x[c(1,2,4)], col = 'green', pch = c('1','2','4') )
airTemp3[c(7,8,9,10)]
airTemp3[c(2,3,4,5)]
airTemp3[c(12,13,15)]
betaSIM(dataGL)
betaSIM(dataPJ)
betaSIM(dataPP)
dataPP[c(1,2,3,5),]
betaSIM(dataPP[c(1,2,3,5),])
plot(airTemp3[c(2,3,4,5)],betaSIM(dataGL), xlim = c(17,35), col = 'red', pch = c('1','2','3','4'))
points(airTemp3[c(7,8,9,10)], betaSIM(dataPJ), col = 'blue', pch = c('1','2','3','4'))
points(airTemp3[c(12,13,15)], betaSIM(dataPP[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
plot(airTemp3[c(2,3,4,5)],betaSIM(dataGL), col = 'red', pch = c('1','2','3','4'))
points(airTemp3[c(7,8,9,10)], betaSIM(dataPJ), col = 'blue', pch = c('1','2','3','4'))
points(airTemp3[c(12,13,15)], betaSIM(dataPP[c(1,2,3,5),]), col = 'green', pch = c('1','2','4') )
betaSIM(dataPP)
